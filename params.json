{"name":"Dynamicbiseriation","tagline":"Two-way Incremental Seriation based on Hamiltonian Path","body":"Dynamic Two-Way Seriation\r\n==\r\nTwo-way Incremental Seriation based on Hamiltonian Path is a package that takes a sparse term-document matrix provided in libsvm format, and calculates the seriation of the term space. Several distance functions are available. \r\n\r\nUsage\r\n==\r\nGiven an input matrix in sparse libsvm format, the class DynamicBiseriation will calculate the biseriation of the matrix. Given a sequence of matrices, it will calculate the updates to the biseration. Different distance functions and biseriation heuristics are available.\r\n\r\nUsage:\r\n\r\n   $ java -jar DynamicBiseriation.jar [options] collection_file [update_files]\r\n\r\nArguments:\r\n\r\n    -d Distance   Distance function (default: Euclidean):\r\n                     Correlation\r\n                     Cosine\r\n                     Euclidean\r\n                     Manhattan\r\n                     MutualInformation\r\n    -h heuristic  Heuristic type (default: leftright):\r\n                     leftright\r\n                     insert\r\n\r\nExamples:\r\n\r\n    $ java -jar DynamicBiseriation.jar test_data/collection.dat\r\n    $ java -jar -d Correlation -h insert DynamicBiseriation.jar \\\r\n        test_data/collection.dat test_data/collection-update.dat\r\n\r\nCompilation\r\n==\r\nIssuing ant jar should compile the classes and create the jar file in build/jar.\r\n\r\nCitation\r\n==\r\nIf you use this code, please cite: \r\n\r\nWittek, P. (2013). Two-Way Incremental Seriation in the Temporal Domain with Three-dimensional Visualization: Making Sense of Evolving High-Dimensional Data Sets. Computational Statistics and Data Analysis.\r\n\r\nA preprint of the manuscript is available for download here:\r\n\r\nhttp://hdl.handle.net/2320/12278\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}